name: Deploy Infrastructure

on:
    workflow_dispatch:

jobs:
    deploy:
        runs-on: ubuntu-latest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Create SSH Private Key
              run: |
                mkdir -p my-key
                echo "${{ secrets.PRIVATE_KEY }}" > my-key/id_rsa
                chmod 600 my-key/id.rsa

            - name: Verify KEY
              run: |
                echo "List contents of key"
                ls -l my-key

                echo "display first few lines"
                head -n 5 my-key/id_rsa

            - name: Set up terraform
              uses: hashicorp/setup-terraform@v2
              with:
                terraform_version: 1.5.6

            - name: Terraform Init
              run: terraform init
              working-directory: Terraform

            - name: Terraform Import Key Pair
              run: terraform import aws_key_pair.deployer my-key || true
              working-directory: Terraform

            - name: Get Security Group ID
              id: get_sg
              run: |
                sg_id=$(aws ec2 describe-security-groups \
                  --filters Name=group-name,Values=web_server_sg \
                  --query 'SecurityGroups[0].GroupId' \
                  --region us-east-1 \
                  --output text)

                echo "sg_id=$sg_id" >> $GITHUB_ENV
                
            - name: Terraform Import Security group
              run: terraform import aws_security_group.web_sg ${{ env.sg_id }} || true
              working-directory: Terraform

            - name: Terraform plan
              run: terraform plan -var="private_key=${{ secrets.PRIVATE_KEY}}"
              working-directory: Terraform

            - name: Terraform Apply
              run: terraform apply -auto-approve -var="private_key=${{ secrets.PRIVATE_KEY}}"
              working-directory: Terraform
              
            - name: Get Instance IP and create inventory
              run: |
                ip=$(terraform output -raw public_ip 2>/dev/null | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}')
                echo "Public ip is: $ip"

                cd ..
                echo "[web]" > ansible/inventory.ini
                echo "$ip ansible_user=ec2-user ansible_ssh_private_key_file=./my-key/id_rsa" >> ansible/inventory.ini
              working-directory: Terraform
            
            - name: Run Ansible Playbook
              run: |
                ansible-playbook -i ansible/inventory.ini ansible/webserver-setup.yml
              env:
                ANSIBLE_HOST_KEY_CHECKING: "False"
